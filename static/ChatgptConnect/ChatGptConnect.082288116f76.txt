@csrf_exempt
def AIresponse(request):
    if request.method == 'POST':
        input_text = request.POST.get('input_text')
        if input_text:
            # Define the API endpoint URL and headers
            # url = "https://api.openai.com/v1/engines/davinci-codex/completions"
            # url = "https://api.openai.com/v1/engines/davinci/completions"
            url = "https://api.openai.com/v1/engines/curie/completions"
            headers = {
                "Content-Type": "application/json",
                "Authorization": "Bearer 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"
            }

            # Define the request payload
            data = {
                "prompt": input_text,
                "max_tokens": 200,
                "temperature": 0.5
            }

            # Send the request to the OpenAI API
            response = requests.post(url, headers=headers, json=data)

            # Process the response data and return it as a JSON response
            response_json = response.json()
            print(response_json)
            # if "choices" in response_json and len(response_json["choices"]) > 0 and "text" in response_json["choices"][0]:
            #     generated_text = response_json["choices"][0]["text"]
            #     return JsonResponse({'generated_text': generated_text})
            # elif "text" in response_json:
            #     generated_text = response_json["text"]
            #     return JsonResponse({'generated_text': generated_text})
            generated_text = response_json["choices"][0]["text"] if "choices" in response_json else response_json.get(
                "text", "")
            # return JsonResponse({'generated_text': generated_text})
            return render(request, 'dashboard/AIresponse.html', {'generated_text': generated_text})

            # Return an error response if input_text is not provided
        # return JsonResponse({'error': 'Input text is required.'}, status=400)
        else:
            return JsonResponse({'error': 'Bad request'}, status=400)
    else:
        return render(request, 'dashboard/AIresponse.html')